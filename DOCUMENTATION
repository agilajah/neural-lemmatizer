Requirements:
======================

0. Python 2.7 and above
   Keras 1


1. train file - In the train file, words and their respecive lemmas should be tab separated. After each sentence, there should be a new line. The format of the train file is like below:
word1	lemma1
word2	lemma2
word3	lemma3
word4	lemma4

word5	lemma5
word6	lemma6
word7	lemma7
word8	lemma8
word9	lemma9


2. test file - In the test file, after each sentence, there should be a new line. The format of the test file is like below:
word1
word2
word3
word4

word5
word6
word7
word8
word9

To evaluate the lemmatizer on a test file for which the gold lemma of each word is available, the format of the test file is like below:
word1	lemma1
word2	lemma2
word3	lemma3
word4	lemma4

word5	lemma5
word6	lemma6
word7	lemma7
word8	lemma8
word9	lemma9


3. word vectors file - The word vectors file generated by training word2vec on a corpus. The format of the file should be like below:
word1<space>vector1
word2<space>vector2


4. parameters file - In the parameters file, the value of the parameters of the model should be given. The format of the parameters file is like below:
The first line should be the cell type of the character level network. It should be from the lists BLSTM, BGRU and SimpleRNN.
The second line should be the maximum word length in number of characters. For the words having number of characters more than this value, the excess characters will be truncated out.
The third line should be the number of neurons in the cell of the character level network.
The fourth line should the name of the word vectors file generated by training word2vec on a corpus.
The fifth line should be the cell type of the second level recurrent network which does the edit tree classification. It should be from the lists BLSTM, BGRU and SimpleRNN.
The sixth line should be the number of neurons in the cell of the edit tree classifier network.
The seventh line should be the number of epochs for training of the network.
The eighth line should be the batch size for training of the network.
The ninth line is the divide file factor. For large size data, generating the data matrices (class annotation matrices, applicable edit trees matrices, char vectors matrices etc.) which will be generated while running the code, takes too much time. Due to reduce the time, we fragment the matrices part-by-part and then dump them in the disk and reload part-by-part. For our experiments we kept this value as 2000. It's on user's choice to set this value. Normally set this value in terms of thousands i.e. 1000/2000/3000.

Content of a sample parameter file will be like below:
BLSTM
25
10
X.vec
BLSTM
64
10
1
2000


5. Place all python files (edit_tree.py, main.py, preprocessing.py, models.py, load_data.py), word vectors file, train file, test file in the same directory.

6. Let the name of the training file is 'train' and the test file is 'test' and the parameter file is 'parameters'. To train the model on 'train' and then test it on 'test', the following command should be run:


python main.py parameters train test

The name of the output file will be 'test_output'
